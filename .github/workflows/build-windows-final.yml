name: Windows Build (English)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Prepare Build Environment
      run: |
        Write-Host "Preparing build environment..."
        Write-Host "Working directory: $(Get-Location)"
        Write-Host "Available disk space: $((Get-WmiObject -Class Win32_LogicalDisk -Filter "DeviceID='C:'").FreeSpace / 1GB) GB"
      shell: powershell
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.0'
        channel: 'stable'
    
    - name: Create Flutter Project
      run: |
        Write-Host "Creating Flutter project structure..."
        flutter create --platforms=windows elasticsearch_query_helper
        Set-Location elasticsearch_query_helper
        Write-Host "Project created successfully, current directory: $(Get-Location)"
      shell: powershell
    
    - name: Setup Project Files
      run: |
        Write-Host "Setting up project files..."
        
        # Create basic main.dart
        $mainDart = @(
          "import 'package:flutter/material.dart';",
          "",
          "void main() {",
          "  runApp(MyApp());",
          "}",
          "",
          "class MyApp extends StatelessWidget {",
          "  @override",
          "  Widget build(BuildContext context) {",
          "    return MaterialApp(",
          "      title: 'Elasticsearch Query Helper',",
          "      theme: ThemeData.dark(),",
          "      home: MyHomePage(),",
          "    );",
          "  }",
          "}",
          "",
          "class MyHomePage extends StatefulWidget {",
          "  @override",
          "  _MyHomePageState createState() => _MyHomePageState();",
          "}",
          "",
          "class _MyHomePageState extends State<MyHomePage> {",
          "  @override",
          "  Widget build(BuildContext context) {",
          "    return Scaffold(",
          "      appBar: AppBar(",
          "        title: Text('Elasticsearch Query Helper'),",
          "      ),",
          "      body: Center(",
          "        child: Column(",
          "          mainAxisAlignment: MainAxisAlignment.center,",
          "          children: [",
          "            Text(",
          "              'Elasticsearch Query Helper',",
          "              style: TextStyle(fontSize: 24, color: Colors.white),",
          "            ),",
          "            SizedBox(height: 20),",
          "            ElevatedButton(",
          "              onPressed: () {",
          "                // TODO: Implement connection functionality",
          "              },",
          "              child: Text('Connect to Elasticsearch'),",
          "            ),",
          "          ],",
          "        ),",
          "      ),",
          "    );",
          "  }",
          "}"
        )
        
        $mainContent = $mainDart -join "`n"
        $mainContent | Out-File "lib\main.dart" -Encoding UTF8
        
        Write-Host "Project files setup completed"
      shell: powershell
    
    - name: Enable Windows Desktop
      run: |
        Write-Host "Enabling Windows desktop support..."
        flutter config --enable-windows-desktop
        Write-Host "Windows desktop support enabled"
      shell: powershell
    
    - name: Get Dependencies
      run: |
        Write-Host "Getting Flutter dependencies..."
        flutter pub get
        Write-Host "Dependencies installed successfully"
      shell: powershell
    
    - name: Clean Build
      run: |
        Write-Host "Cleaning build cache..."
        flutter clean
        Write-Host "Clean completed"
      shell: powershell
    
    - name: Build Windows Release
      run: |
        Write-Host "Starting Windows build..."
        flutter build windows --release --verbose
        
        $exePath = "build\windows\runner\Release\elasticsearch_query_helper.exe"
        if (Test-Path $exePath) {
          Write-Host "Build successful!"
          $exe = Get-Item $exePath
          Write-Host "Executable size: $([math]::Round($exe.Length / 1MB, 2)) MB"
          Write-Host "Executable path: $exePath"
        } else {
          Write-Host "Build failed - executable not found at: $exePath"
          Write-Host "Checking build directory structure..."
          if (Test-Path "build") {
            Get-ChildItem "build" -Recurse | Where-Object { $_.Name -like "*.exe" } | ForEach-Object {
              Write-Host "Found exe file: $($_.FullName)"
            }
          }
          throw "Build failed - executable not generated"
        }
      shell: powershell
    
    - name: Create Release Package
      run: |
        Write-Host "Creating release package..."
        
        $packageDir = "elasticsearch-query-helper-windows"
        $releaseDir = "build\windows\runner\Release"
        
        if (Test-Path $packageDir) {
          Remove-Item $packageDir -Recurse -Force
        }
        New-Item -ItemType Directory -Force -Path $packageDir
        
        Write-Host "Copying release files..."
        Copy-Item "$releaseDir\*" $packageDir -Recurse -Force
        
        # Create README file
        $readmeLines = @(
          "Elasticsearch Query Helper - Windows Version",
          "",
          "This is a demo version with basic Flutter application structure.",
          "",
          "Installation Instructions:",
          "1. Extract all files to a folder",
          "2. Double-click elasticsearch_query_helper.exe to start the program",
          "",
          "System Requirements:",
          "- Windows 10 or later",
          "- No additional dependencies required",
          "",
          "Version Information:",
          "- Version: 1.0.0 (Demo)",
          "- Build Time: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')",
          "- Platform: Windows x64",
          "",
          "Note:",
          "This is a demo version built automatically via GitHub Actions.",
          "For full functionality, please use the version with complete source code.",
          "",
          "Usage Instructions:",
          "1. After starting the program, you will see the basic interface",
          "2. This is a demo application showing Flutter Windows app structure",
          "",
          "Troubleshooting:",
          "- If the program cannot start, ensure Windows version compatibility",
          "- If you encounter issues, check firewall settings"
        )
        
        $readmeContent = $readmeLines -join "`n"
        $readmeContent | Out-File "$packageDir\README.txt" -Encoding UTF8
        
        # Create startup script
        $batLines = @(
          "@echo off",
          "echo Starting Elasticsearch Query Helper Demo...",
          "echo.",
          "elasticsearch_query_helper.exe",
          "echo.",
          "echo Program exited, press any key to close this window...",
          "pause >nul"
        )
        
        $startBatContent = $batLines -join "`n"
        $startBatContent | Out-File "$packageDir\start.bat" -Encoding ASCII
        
        Write-Host "Release package created successfully"
        Write-Host "Package contents:"
        Get-ChildItem $packageDir | ForEach-Object {
          if ($_.PSIsContainer) {
            Write-Host "  Folder: $($_.Name)/"
          } else {
            $size = [math]::Round($_.Length / 1KB, 1)
            Write-Host "  File: $($_.Name) ($size KB)"
          }
        }
      shell: powershell
    
    - name: Create ZIP Archive
      run: |
        $zipName = "elasticsearch-query-helper-windows-demo-v1.0.0.zip"
        
        Write-Host "Creating ZIP archive: $zipName"
        Compress-Archive -Path "elasticsearch-query-helper-windows\*" -DestinationPath $zipName -Force
        
        if (Test-Path $zipName) {
          $zipInfo = Get-Item $zipName
          Write-Host "ZIP created successfully"
          Write-Host "ZIP size: $([math]::Round($zipInfo.Length / 1MB, 2)) MB"
          Write-Host "ZIP path: $($zipInfo.FullName)"
        } else {
          throw "Failed to create ZIP archive"
        }
      shell: powershell
    
    - name: Upload Release Package
      uses: actions/upload-artifact@v4
      with:
        name: elasticsearch-query-helper-windows-demo
        path: elasticsearch-query-helper-windows/
        retention-days: 30
    
    - name: Upload ZIP Package
      uses: actions/upload-artifact@v4
      with:
        name: elasticsearch-query-helper-windows-demo-zip
        path: elasticsearch-query-helper-windows-demo-v*.zip
        retention-days: 30
    
    - name: Build Summary
      run: |
        Write-Host "=== Build Completed Successfully ==="
        Write-Host "SUCCESS: Flutter demo application built"
        Write-Host "SUCCESS: Windows executable generated"
        Write-Host "SUCCESS: Release package created"
        Write-Host "SUCCESS: ZIP archive generated"
        Write-Host ""
        Write-Host "Description:"
        Write-Host "This is a demo version that does not depend on any code repository."
        Write-Host "The application contains basic Flutter interface structure."
        Write-Host ""
        Write-Host "Download Instructions:"
        Write-Host "1. Go to Actions page"
        Write-Host "2. Select this build"
        Write-Host "3. Download ZIP file from Artifacts section"
        Write-Host "4. Extract and run elasticsearch_query_helper.exe"
        Write-Host ""
        Write-Host "Package Contents:"
        Write-Host "- elasticsearch_query_helper.exe (demo application)"
        Write-Host "- README.txt (documentation)"
        Write-Host "- start.bat (convenient startup script)"
        Write-Host "- Other runtime files"
      shell: powershell